Test date: 06/30/16  20:39:46 
The number of times you used the grading program is 13 
In the business world, your customer replaces the grading program. 
The goal is a correct program with the fewest grading attempts. 
Linkhll Grading System Version 4.0
Student: Last=Marks                First=Collin               Type=Individual          
Grading and testing history log
       User Test.    Date: 06/30/16  15:10:01  user_test    testout      
       User Test.    Date: 06/30/16  15:11:52  user_test    testout      
       User Test.    Date: 06/30/16  15:14:00  user_test    testout      
       User Test.    Date: 06/30/16  15:21:17  user_test    testout      
       User Test.    Date: 06/30/16  15:35:57  user_test    testout      
       User Test.    Date: 06/30/16  15:42:15  user_test    testout      
       User Test.    Date: 06/30/16  15:46:29  user_test    testout      
       User Test.    Date: 06/30/16  16:12:46  user_test    testout      
       User Test.    Date: 06/30/16  16:17:22  user_test    testout      
       User Test.    Date: 06/30/16  16:36:50  user_test    testout      
       User Test.    Date: 06/30/16  16:41:16  user_test    testout      
       User Test.    Date: 06/30/16  17:02:42  user_test    testout      
   *** Grading Run.  Date: 06/30/16  17:03:48 
   ************************************************** 
   *** Program works correctly.                       
   *** Additional runs are to improve efficiency.     
   *** Completion -- Date: 06/30/16  17:05:00                     
   ************************************************** 
   *** Grading Run.  Date: 06/30/16  17:32:16 
   *** Grading Run.  Date: 06/30/16  17:32:56 
   *** Grading Run.  Date: 06/30/16  17:34:55 
   *** Grading Run.  Date: 06/30/16  17:36:45 
   *** Grading Run.  Date: 06/30/16  17:39:35 
       User Test.    Date: 06/30/16  19:34:43  user_test    testout      
   *** Grading Run.  Date: 06/30/16  19:34:49 
       User Test.    Date: 06/30/16  20:19:49  user_test    testout      
   *** Grading Run.  Date: 06/30/16  20:19:54 
   *** Grading Run.  Date: 06/30/16  20:22:49 
   *** Grading Run.  Date: 06/30/16  20:25:09 
   *** Grading Run.  Date: 06/30/16  20:25:38 
   *** Grading Run.  Date: 06/30/16  20:34:59 
   *** Grading Run.  Date: 06/30/16  20:39:46 

++ Grade ++   60 = Points earned for correct answers.

+  Your executed instruction count per call is = 00018
+   
+  Target instructions executed per call is:
+  20 points 01 - 18 
+  15 points 19 - 20 
+  10 points 21 - 22 
+   5 points 23 - 24 
+   0 points 25+      
+                     
++ Grade ++   20 = Points earned for code executed efficiency!

-> Analyzing program documentation. 
The heuristic algorithms used may have problems with your specific code. 
Contact the instructor if you detect a problem with your grade. 
DOCPH-0019 The program header format is adequate. 
DOCHB-0.76 Use of code block headers is adequate. 
DOCLC-1.00 Use of line comments is adequate. 
++ Grade ++   20 = Points earned for correct documentation.    

-> Calculating the total grade for the program.                  
This grade is subject to adjustment by the instructor.           
This grade will be reduced by any late submission penalty.       
++ Grade ++  100 = Total grade generated by the Grading System.  

-> Statistics on testing and grading                             
    14  = Number of user tests.                                  
     1  = Number of grading runs to get the program working.     
    12  = Number of grading runs to improve efficiency or documentation. 

+- atyC<6&}xC6&k~C86&juiC86&zuzC766&Zkyz&jgzk@&6<59657<&&86@9?@:<&

Building the file linkhll.ans for electronic submission...

;--------------------------------------------------------------------
;	program: 	LINKHLL
;
;	function: 	The LinkHLL subroutine will find the maximum
; 				of 4 parameter values
; 				and then constructs the product of the 2 maxs.
;				We will search for the 2 maxs and then return
;				the product
;
;	owner: 		Collin Marks
;
;	date: 		06/30/2016
;---------------------------------------
;
; The LinkHLL subroutine will find the maximum
; of 4 parameter values
; and then construct the product of the 2 maxs
;
;---------------------------------------
         .model    small               ;
         .8086                         ;
         public    _linkhll            ;
;---------------------------------------

         .data
;---------------------------------------
;
; Data Segment
;
;---------------------------------------

         .code
;---------------------------------------
;
; Code Segment
;
; initially pushes all the pointers for
; subroutine
;
;---------------------------------------
_linkhll:
		push bp			; saves the callers bp
		mov bp,sp		; loads bp from sp
		mov ax, [bp+4]	; store values into the reg
		mov bx, [bp+6]	; put value into 
		mov cx, [bp+8]	; put value into cx
		mov dx, [bp+10]	; put value into dx
		cmp ax, cx		; cmp ax to cx
		ja A			; if ax < cx then swap them
		xchg ax, cx		; swaps ax and cx
;---------------------------------------
; will process relation between ax and dx
;---------------------------------------		
	A:
		cmp ax, dx		; cmp ax to dx
		ja B			; if ax < dx then swap them 
		xchg ax, dx		; swap ax and dx
;---------------------------------------
; will process relation between bx and cx
;---------------------------------------	
	B:
		cmp bx, cx		; cmp bx to cx
		ja D			; if bx < cx then swap them
		xchg bx, cx		; swaps bx and cx
;---------------------------------------
; will process relation between bx and dx
;---------------------------------------	
	D:
		cmp bx, dx		; cmp bx to dx
		ja E			; if bx < dx swap them
		xchg bx, dx		; swaps bx and dx
;---------------------------------------
; will effectively construct the multiplicand
; and will end program
;---------------------------------------	
	E:	
		mul bx			; multiply ax and bx register
		pop bp			; restore registers
        ret             ; return values will be in dx:ax pair
        end             ; effectively terminate the subroutine
;---------------------------------------

